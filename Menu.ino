float value = 0;
int menu[5] = {0};
int pageNum;
int changePage = 0;

char poop [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0xA4, 0xD0, 0xF8, 0xE0, 0xD4, 0x08, 0x00, 0x00, 0x00, 0x00
};

char medicine [] = {
  0x00, 0x00, 0x00, 0x00, 0x82, 0x46, 0x3A, 0x82, 0x82, 0x3A, 0x46, 0x82, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3F, 0x40, 0x46, 0x46, 0x5F, 0x5F, 0x46, 0x46, 0x40, 0x3F, 0x00, 0x00, 0x00
};

char sparkle1 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0E, 0x04, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x04, 0x0E, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x01, 0x00, 0x00
};

char sparkle2 [] = {
0x00, 0x00, 0x00, 0x00, 0x40, 0xE0, 0x40, 0x00, 0x00, 0x00, 0x08, 0x36, 0x08, 0x00, 0x00, 0x00,
0x00, 0x00, 0x10, 0x6C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00
};
char feeding [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x3C, 0x7E, 0xFF, 0xD3, 0xD3, 0xD7,
0x5E, 0x1C, 0x00, 0x00, 0x3C, 0x7E, 0xFF, 0xD3, 0xD3, 0xD7, 0x5E, 0x1C, 0x00, 0x00, 0x3C, 0x7E,
0xE7, 0xC3, 0xC3, 0xC3, 0x7E, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x06,
0x03, 0x03, 0x07, 0xFE, 0xFC, 0x00, 0x00, 0x9C, 0xFE, 0x63, 0x63, 0x63, 0x3F, 0x1D, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x1E, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xDA, 0xE2, 0x42, 0x06, 0x34, 0xCA, 0x12, 0x1A, 0xF8, 0xDC, 0x38, 0x9A, 0xE6, 0xEE, 0x08, 0xF2
};

char cleaning [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
0xE0, 0xF0, 0x70, 0x38, 0x38, 0x38, 0x38, 0x30, 0x10, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F,
0x3F, 0x78, 0x70, 0xE0, 0xE0, 0xE0, 0x60, 0x70, 0x40, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x3C,
0x7E, 0xFF, 0xD3, 0xD3, 0xD7, 0x5E, 0x1C, 0x00, 0x00, 0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0x66, 0xFF,
0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x06, 0x03, 0x03, 0x07, 0xFE, 0xFC, 0x00, 0x00, 0xFF, 0xFF, 0x00,
0x00, 0xFF, 0xFF, 0x06, 0x03, 0x03, 0x07, 0xFE, 0xFC, 0x00, 0x00, 0x9C, 0xFE, 0x63, 0x63, 0x63,
0x3F, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1F, 0x33, 0x33, 0x33, 0x33,
0x33, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC6, 0x88, 0xFA, 0x0C, 0x7E, 0xA8, 0x2C, 0x74, 0xC2, 0xBE, 0xB4, 0xE2, 0xA2, 0xA4, 0xC6, 0x3E
};

char healthy [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0,
0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF,
0xFF, 0x00, 0x00, 0xE0, 0xF0, 0xF8, 0x98, 0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 0xE0, 0xF0, 0x38,
0x18, 0x18, 0x30, 0xF8, 0xF8, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18,
0x00, 0xFF, 0xFF, 0x30, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07,
0x07, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x06, 0x06, 0x02, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07,
0x06, 0x06, 0x03, 0x07, 0x07, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x4C, 0x54, 0x38, 0x18, 0x22, 0x3C, 0xDA, 0xBE, 0xA4, 0x6E, 0x0E, 0xE4, 0xB6, 0x94, 0x68, 0x0A
};

char games [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x78, 0xFE, 0xFF, 0x87, 0x03, 0x01, 0x01, 0x39, 0x39, 0xB9, 0xF8, 0xF8,
0xF8, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x30, 0xF8, 0xF8, 0x00, 0x00, 0xF8, 0xF8, 0x30,
0x18, 0x18, 0x38, 0xF0, 0xF0, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00, 0x00, 0xE0, 0xF0, 0xF8, 0x98,
0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x30, 0x70, 0xD8, 0xD8, 0xB8, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x07, 0x06, 0x06, 0x06, 0x07, 0x03, 0x07, 0x07,
0x07, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x06, 0x03, 0x07, 0x07, 0x00, 0x00, 0x07, 0x07, 0x00,
0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06,
0x06, 0x06, 0x02, 0x00, 0x02, 0x03, 0x06, 0x06, 0x06, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x36, 0x00, 0xD8, 0xDE, 0x46, 0x1C, 0xC4, 0xA0, 0x6A, 0x72, 0x9E, 0x90, 0xCC, 0xCE, 0x42, 0x4A
};
char stats [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0,
0xC0, 0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x8F, 0x1F, 0x19,
0x39, 0x39, 0xF3, 0xE1, 0xC0, 0x00, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0xE0, 0xF0, 0x38,
0x18, 0x18, 0x30, 0xF8, 0xF8, 0x00, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x00, 0x30, 0x70, 0xD8,
0xD8, 0xB8, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07,
0x07, 0x07, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07,
0x06, 0x06, 0x03, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x02, 0x03, 0x06, 0x06,
0x06, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x28, 0xB4, 0x60, 0x4E, 0x7E, 0x90, 0xE4, 0xCA, 0x46, 0x1E, 0x14, 0x70, 0xA4, 0x4C, 0x84, 0x9E
};

static enum pages {
  Feeding = 1,
  Cleaning = 2,
  Medicine = 3,
  Stats = 4,
  Games = 5,
} currentMenuPage;

struct menuState {
  struct ButtonState buttons [2];
} gameMenuState;

int foodInt = 0;
int selectState = 1;
int eatingState = 1;

static void feedingPage() {
  uiInputTick();
  if(selectState == 1){
    printFood();
    foodInt = foodSelect(selectState);
  }
  if (gameInputState.buttons[1].isRising){
    OrbitOledClear();
    OrbitOledClearBuffer();
    selectState = 0;
    stat.hunger += 30;
  }
  if(selectState == 0){
    tamaFeeding(tamaBack, tamaEat, foodInt);
  }


    
  }
  
  if (gameInputState.buttons[0].isRising){
    OrbitOledClearBuffer();
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
    changePage = 0;
    foodInt = 0;
    selectState = 1;
    eatingState = 1;
  }
  OrbitOledUpdate();
}


void cleaningPage() {
  ShakeInit();
  uiInputTick();
  bool shaking = false;
  tamaDoingThings(tamaForw);

  OrbitOledMoveTo(32, 12);
  OrbitOledPutBmp(16, 16, poop);
  ShakeTick();
  if (ShakeIsShaking()) {
    Serial.print("shake");
    shaking = true;
  }

  if (shaking) {
    delay (1000);
    stat.hygiene += 50;
    OrbitOledClearBuffer();
    tamaDoingThings(tamaForw);
    OrbitOledMoveTo(15,12);
    OrbitOledPutBmp(16,16, sparkle1);
    OrbitOledMoveTo(95,10);
    OrbitOledPutBmp(16,16, sparkle2);
    OrbitOledMoveTo(0, 0);
    OrbitOledDrawString("All Clean!");
    OrbitOledUpdate();
    delay (5000);
    pageMain = 0;
    viewMenu = 1;
    changePage = 0;
    shaking = false;
  }
  if (gameInputState.buttons[0].isRising)
  {
    OrbitOledClearBuffer();
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
    changePage = 0;
  }

  OrbitOledUpdate();

}

static void medicinePage() {
  uiInputTick();
  tamaDoingThings(tamaForw);
  if (stat.health > 40)
  { OrbitOledMoveTo(0, 0);
    OrbitOledDrawString("You are healthy!");
    OrbitOledUpdate();
    delay(3000);
    pageMain = 0;
    viewMenu = 1;
  }
  else {

    OrbitOledMoveTo(32, 12);
    OrbitOledPutBmp(16, 16, medicine);
    OrbitOledMoveTo(0, 0);
    OrbitOledDrawString("Visited Doctor!");
    OrbitOledUpdate();
    stat.health += 50;
    delay(3000);
    pageMain = 0;
    viewMenu = 1;

  }


  if (gameInputState.buttons[0].isRising)
  {

    OrbitOledClearBuffer();
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
  }
}

static void statsPage() {
  uiInputTick();
  String strHunger = String(stat.hunger);
  char hunger[1024];
  strcpy(hunger, strHunger.c_str());

  String strHealth = String(stat.health);
  char health[1024];
  strcpy(health, strHealth.c_str());

  String strHappiness = String(stat.happiness);
  char happiness[1024];
  strcpy(happiness, strHappiness.c_str());

  String strHygiene = String(stat.hygiene);
  char hygiene[1024];
  strcpy(hygiene, strHygiene.c_str());


  OrbitOledMoveTo(0, 0);
  OrbitOledDrawString("Hunger: ");
  OrbitOledDrawString(hunger);

  OrbitOledMoveTo(0, 8);
  OrbitOledDrawString("Health: ");
  OrbitOledDrawString(health);

  OrbitOledMoveTo(0, 16);
  OrbitOledDrawString("Happy: ");
  OrbitOledDrawString(happiness);

  OrbitOledMoveTo(0, 24);
  OrbitOledDrawString("Hygiene: ");
  OrbitOledDrawString(hygiene);
  OrbitOledUpdate();

  if (gameInputState.buttons[0].isRising)
  {

    OrbitOledClearBuffer();
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
  }
}

static void gamesPage() {
  uiInputTick();

  OrbitOledMoveTo(0, 0);
  OrbitOledDrawString("Choose a game!");
  if (gameInputState.buttons[0].isRising)
  {

    OrbitOledClearBuffer();
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
  }
}


void menuPage() {

  //Serial.print("menu\n");
  uiInputTick();
  if (viewMenu == 1) {
    OrbitOledMoveTo(0, 24);
//    OrbitOledDrawString("Menu: ");

    value = analogRead(Potentiometer);
    int menuSize = sizeof(menu) / sizeof(int);
    for (int i = 0; i <  sizeof(menu) / sizeof(int); i++) {
      menu[i] = (4095 / menuSize) * (i);
    }

    if (value >= menu[0] && value < menu[1]) {
      OrbitOledMoveTo(0,8);
      OrbitOledPutBmp(128, 25, feeding);
      currentMenuPage = Feeding;
    }
    else if (value >= menu[1] && value < menu[2]) {
      OrbitOledMoveTo(0,8);
      OrbitOledPutBmp(128, 25, cleaning);
      currentMenuPage = Cleaning;
    }
    else if (value >= menu[2] && value < menu[3]) {
      OrbitOledMoveTo(0,8);
      OrbitOledPutBmp(128, 25, healthy);
      currentMenuPage = Medicine;
    }
    else if (value >= menu[3] && value < menu[4]) {
      OrbitOledMoveTo(0,8);
      OrbitOledPutBmp(128, 25, games);
      currentMenuPage = Games;
    }
    else if (value >= menu[4] && value <= 4095) {
      OrbitOledMoveTo(0,8);
      OrbitOledPutBmp(128, 25, stats);
      currentMenuPage = Stats;
    }


    if (gameInputState.buttons[1].isRising) {
      pageEnter = 1;
      //  Serial.print(pageEnter);
      viewMenu = 0;
      selectionScreen(currentMenuPage, pageEnter);
    }
  }
  OrbitOledUpdate();

  if (gameInputState.buttons[0].isRising)
  {
    OrbitOledClear();
    pageMain = 0;
    viewMenu = 1;
    changePage = 0;
  }

}

void selectionScreen(int pageNumber, int pageEnter) {
  OrbitOledClearBuffer();
  OrbitOledUpdate();
  uiInputTick();
  changePage = 1;
  switch (pageNumber) {
    case Feeding:
      OrbitOledMoveTo(0, 0);
      OrbitOledDrawString("Pick a food.");

      while (changePage == 1) {
        feedingPage();

      }
      break;

    case Cleaning:
      OrbitOledMoveTo(0, 0);
      OrbitOledDrawString("Shake to clean!!");
      while (changePage == 1) {
        cleaningPage();
      }
      break;

    case Medicine:
      medicinePage();
      break;

    case Stats:
      statsPage();
      break;

    case Games:
      OrbitOledMoveTo(0, 0);
      OrbitOledPutBmp(128,32, bopit);

      OrbitOledUpdate();

      delay (4000);
      OrbitOledClearBuffer();
      
      OrbitOledMoveTo(64, 16);
      OrbitOledDrawString("3");
      OrbitOledUpdate();
      delay (1000);
      OrbitOledClearBuffer();
      
      OrbitOledMoveTo(64, 16);      
      OrbitOledDrawString("2");
      OrbitOledUpdate();
      delay (1000);
      OrbitOledClearBuffer();
      
      OrbitOledMoveTo(64, 16);
      OrbitOledDrawString("1");
      OrbitOledUpdate();
      delay (1000);
      OrbitOledClearBuffer();
      
      OrbitOledMoveTo(64, 16);
      OrbitOledDrawString("GO!");
      OrbitOledUpdate();
      delay (1000);
      OrbitOledClearBuffer();

      pageMain = 2;
      break;

  }

  OrbitOledUpdate();
}
