#include <FillPat.h>
#include <LaunchPad.h>
#include <OrbitBoosterPackDefs.h>
#include <OrbitOled.h>
#include <OrbitOledChar.h>
#include <OrbitOledGrph.h>
#include <stdlib.h>
#include <Wire.h>

int xpos = 0;
int ypos = 10;
int count = 3;

char frog [] = {
0x00, 0x60, 0x90, 0x8C, 0x82, 0x8A, 0x82, 0x84, 0x84, 0x82, 0x8A, 0x42, 0x0C, 0x10, 0xE0, 0x00,
0x00, 0x00, 0x01, 0x1E, 0x20, 0x40, 0x80, 0x40, 0x40, 0x4C, 0x90, 0x4C, 0x20, 0x1E, 0x01, 0x00
};

char revFrog [] = {
0x00, 0xE0, 0x10, 0x0C, 0x42, 0x8A, 0x82, 0x84, 0x84, 0x82, 0x8A, 0x82, 0x8C, 0x90, 0x60, 0x00,
0x00, 0x01, 0x1E, 0x20, 0x4C, 0x90, 0x4C, 0x40, 0x40, 0x80, 0x40, 0x20, 0x1E, 0x01, 0x00, 0x00
};

char eatingFrog [] = {
0x00, 0xE0, 0x10, 0x0C, 0x42, 0x8A, 0x82, 0x84, 0x84, 0x82, 0x8A, 0x82, 0x8C, 0x90, 0x60, 0x00,
0x00, 0x01, 0x1E, 0x20, 0x4C, 0x90, 0x4D, 0x42, 0x42, 0x82, 0x42, 0x22, 0x1E, 0x01, 0x00, 0x00
};

char fish [] = {
  0xC0, 0xA0, 0xB0, 0xA8, 0xA4, 0x2C, 0xC6, 0x05, 0x25, 0x0D, 0xF6, 0x08, 0x10, 0x20, 0x90, 0x70,
  0x01, 0x02, 0x02, 0x86, 0xEA, 0xFA, 0x19, 0x08, 0x08, 0xBE, 0xFD, 0xE8, 0x04, 0x02, 0x04, 0x07
};

char revFish [] = {
  0x70, 0x90, 0x20, 0x10, 0x08, 0xF6, 0x0D, 0x25, 0x05, 0xC6, 0x2C, 0xA4, 0xA8, 0xB0, 0xA0, 0xC0,
  0x07, 0x04, 0x02, 0x04, 0xE8, 0xFD, 0xBE, 0x08, 0x08, 0x19, 0xFA, 0xEA, 0x86, 0x02, 0x02, 0x01
};

char eatingFish [] = {
0x70, 0x90, 0x20, 0x10, 0x08, 0xF6, 0x0D, 0x25, 0x05, 0xC6, 0x2C, 0xA4, 0xA8, 0xB0, 0xA0, 0xC0,
0x07, 0x04, 0x02, 0x04, 0xE8, 0xFD, 0xBE, 0x08, 0x08, 0x1B, 0xFC, 0xE9, 0x8A, 0x0A, 0x06, 0x00
};

char joe [] = {
  0x00, 0x00, 0xF1, 0x0A, 0x2C, 0x8C, 0x8E, 0x4E, 0x8E, 0x8E, 0x0C, 0x2C, 0x0A, 0xF2, 0x00, 0x00,
  0x08, 0x08, 0x05, 0x9E, 0xB8, 0x78, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xB8, 0x1E, 0x05, 0x02, 0x02
};

char revJoe [] = {
  0x00, 0x00, 0xF2, 0x0A, 0x2C, 0x0C, 0x8E, 0x8E, 0x4E, 0x8E, 0x8C, 0x2C, 0x0A, 0xF1, 0x00, 0x00,
  0x02, 0x02, 0x05, 0x1E, 0xB8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x78, 0xB8, 0x9E, 0x05, 0x08, 0x08
};

char eatingJoe [] = {
0x00, 0x00, 0xF9, 0x05, 0x16, 0x06, 0xC7, 0x47, 0x27, 0xC7, 0x46, 0x16, 0x05, 0xF9, 0x00, 0x00,
0x01, 0x01, 0x02, 0x0F, 0x9C, 0xFC, 0x1C, 0x1D, 0x1D, 0x1C, 0x7C, 0x9C, 0x8F, 0x02, 0x04, 0x04
};

char alien [] = {
  0x00, 0x00, 0x84, 0xF6, 0x08, 0x54, 0x44, 0x04, 0x04, 0x24, 0x08, 0xF6, 0x84, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x04, 0x0D, 0x15, 0x4D, 0x55, 0x55, 0x55, 0x4D, 0x15, 0x0D, 0x04, 0x03, 0x00, 0x00
};

char revAlien [] = {
  0x00, 0x00, 0x00, 0x84, 0xF6, 0x08, 0x24, 0x04, 0x04, 0x44, 0x54, 0x08, 0xF6, 0x84, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x04, 0x0D, 0x15, 0x4D, 0x55, 0x55, 0x55, 0x4D, 0x15, 0x0D, 0x04, 0x03, 0x00
};

char eatingAlien [] = {
0x00, 0x00, 0x80, 0x42, 0xFB, 0x84, 0x92, 0x82, 0xC2, 0xA2, 0xEA, 0x84, 0xFB, 0x42, 0x80, 0x00,
0x00, 0x00, 0x01, 0x02, 0x06, 0x0A, 0x26, 0x2A, 0x2A, 0x2A, 0x26, 0x0A, 0x06, 0x02, 0x01, 0x00
};

char platy [] = {
0x00, 0xE0, 0xA0, 0xA0, 0xB0, 0xA8, 0xE8, 0x08, 0x28, 0x08, 0x90, 0x20, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x03, 0x02, 0x1E, 0xA2, 0xC3, 0xC0, 0x40, 0x44, 0x48, 0x44, 0xE0, 0xDF, 0x90, 0x08, 0x00
};

char revPlaty [] = {
0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x90, 0x08, 0x28, 0x08, 0xE8, 0xA8, 0xB0, 0xA0, 0xA0, 0xE0,
0x00, 0x00, 0x08, 0x90, 0xDF, 0xE0, 0x44, 0x48, 0x44, 0x40, 0xC0, 0xC3, 0xA2, 0x1E, 0x02, 0x03
};

char eatingPlaty [] = {
0x00, 0x00, 0x00, 0x00, 0xE0, 0x10, 0x48, 0x04, 0x14, 0x04, 0xF4, 0x54, 0x58, 0xD0, 0x50, 0x70,
0x00, 0x00, 0x04, 0x88, 0xEF, 0xF0, 0x22, 0x24, 0x22, 0x20, 0xE1, 0xE7, 0x95, 0x0D, 0x05, 0x07
};

/**
 * Food sprites
 */
 
char Bananas1 [] = {
0x80, 0x40, 0x40, 0x20, 0x90, 0x48, 0x24, 0x14, 0xCB, 0x35, 0x09, 0xF6, 0x00, 0x01, 0x03, 0x05,
0x04, 0x0C 
};

char Bananas2 [] = {
0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0xC8, 0x36, 0x09, 0xF6, 0x00, 0x00, 0x03, 0x05,
0x04, 0x0C
};

char Bananas3 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x08, 0xF4, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0C
};

char Cheese1 [] = {
0xC0, 0x30, 0x88, 0x84, 0x82, 0x9A, 0x9E, 0x50, 0xC8, 0x90, 0xA0, 0xC0, 0x07, 0x08, 0x08, 0x0A,
0x08, 0x08
};

char Cheese2 [] = {
0xC0, 0x30, 0x88, 0x84, 0x82, 0x9A, 0x9E, 0x50, 0xA0, 0x40, 0x00, 0x00, 0x07, 0x08, 0x08, 0x0A,
0x08, 0x08
};

char Cheese3 [] = {
0xC0, 0x30, 0x88, 0x84, 0x82, 0x5A, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x08, 0x0C,
0x0B, 0x04, 
};

char Cupcake1 [] = {
0x70, 0xC8, 0x48, 0x5E, 0x9E, 0x9F, 0x5B, 0x92, 0x5E, 0x48, 0xC8, 0xF0, 0x00, 0x07, 0x08, 0x08,
0x08, 0x08, 
};

char Cupcake2 [] = {
0x00, 0x00, 0x00, 0xC0, 0xA0, 0x9C, 0x5B, 0x92, 0x5E, 0x48, 0xC8, 0xF0, 0x00, 0x04, 0x0B, 0x08,
0x08, 0x08 
};

char Cupcake3 [] = {
0x00, 0x00, 0x00, 0xC0, 0x40, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0B, 0x08,
0x08, 0x08
};

struct tamaSprite {
  char forw[], back[], eating[];
};

/**
 * Frog, fish, alien, joe, platy
 */


int xdirect = 0;
int ydirect = 0;
int jump = 0;
void movement() {

  if (xpos == (64 - 16)) {
    xdirect = 1;
  }
  if (xpos == 0) {
    xdirect = 0;
  }
  if (ypos == 7) {
    ydirect = 1;
  }
  if (ypos == 12) {
    ydirect = 0;
  }
  if ((xpos / 10) % 2 == 0) {
    if (ydirect == 0) {
      ypos--;
    } else if (ydirect == 1) {
      ypos++;
    }
  } else if ((xpos / 10) % 2 == 1) {
    ypos == 15;
  }

  if (xdirect == 0) {
    OrbitOledMoveTo(xpos++, ypos);
  }

  else {
    if (xpos > 0 && xdirect == 1) {
      OrbitOledMoveTo(xpos--, ypos);
    }
  }
}
void printTama(char* tamaFor, char* tamaRev) {
  movement();
  if (xdirect == 1)
    OrbitOledPutBmp(16, 16, tamaFor);
  else if (xdirect == 0)
    OrbitOledPutBmp(16, 16, tamaRev);
}

void tamaDoingThings (char* tama ) {
 OrbitOledMoveTo(56, 8);
  
    OrbitOledPutBmp(16, 16, tama);
}
int motionCount = 0;
void tamaFeeding (char* tama1, char* tama2){
  OrbitOledMoveTo(10, 8);
  
  if(motionCount < 500){
    OrbitOledPutBmp(16, 16, tama1);
    motionCount++;
  }
  else if(motionCount >= 500 && motionCount < 1000){
     OrbitOledPutBmp(16, 16, tama2);
     motionCount++;
  }
  else{
    motionCount = 0;
  }
  
}


void printBanana(){
  OrbitOledMoveTo(50, 12);
  OrbitOledPutBmp(12, 12, Bananas1);

}
void printCheese(){
  OrbitOledMoveTo(64, 12);
  OrbitOledPutBmp(12, 12, Cheese1);

}

void printCupcake(){
  OrbitOledMoveTo(96, 12);
  OrbitOledPutBmp(12, 12, Cupcake1);
}



