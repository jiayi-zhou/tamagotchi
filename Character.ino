#include <FillPat.h>
#include <LaunchPad.h>
#include <OrbitBoosterPackDefs.h>
#include <OrbitOled.h>
#include <OrbitOledChar.h>
#include <OrbitOledGrph.h>
#include <stdlib.h>
#include <Wire.h>

int xpos = 0;
int ypos = 10;

static char frog [] = {
  0x00, 0x30, 0xC8, 0x46, 0x41, 0x45, 0x41, 0x42, 0x42, 0x41, 0x45, 0x21, 0x06, 0x08, 0xF0, 0x00,
  0x00, 0x00, 0x00, 0x0F, 0x10, 0x20, 0x40, 0x20, 0x20, 0x26, 0x48, 0x26, 0x10, 0x0F, 0x00, 0x00
};

static char revFrog [] = {
  0x00, 0xF0, 0x08, 0x06, 0x21, 0x45, 0x41, 0x42, 0x42, 0x41, 0x45, 0x41, 0x46, 0xC8, 0x30, 0x00,
  0x00, 0x00, 0x0F, 0x10, 0x26, 0x48, 0x26, 0x20, 0x20, 0x40, 0x20, 0x10, 0x0F, 0x00, 0x00, 0x00
};

static char fish [] = {
  0xC0, 0xA0, 0xB0, 0xA8, 0xA4, 0x2C, 0xC6, 0x05, 0x25, 0x0D, 0xF6, 0x08, 0x10, 0x20, 0x90, 0x70,
  0x01, 0x02, 0x02, 0x86, 0xEA, 0xFA, 0x19, 0x08, 0x08, 0xBE, 0xFD, 0xE8, 0x04, 0x02, 0x04, 0x07
};

static char revFish [] = {
  0x70, 0x90, 0x20, 0x10, 0x08, 0xF6, 0x0D, 0x25, 0x05, 0xC6, 0x2C, 0xA4, 0xA8, 0xB0, 0xA0, 0xC0,
  0x07, 0x04, 0x02, 0x04, 0xE8, 0xFD, 0xBE, 0x08, 0x08, 0x19, 0xFA, 0xEA, 0x86, 0x02, 0x02, 0x01
};

static char joe [] = {
  0x00, 0x00, 0xF1, 0x0A, 0x2C, 0x8C, 0x8E, 0x4E, 0x8E, 0x8E, 0x0C, 0x2C, 0x0A, 0xF2, 0x00, 0x00,
  0x08, 0x08, 0x05, 0x9E, 0xB8, 0x78, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xB8, 0x1E, 0x05, 0x02, 0x02
};

static char revJoe [] = {
  0x00, 0x00, 0xF2, 0x0A, 0x2C, 0x0C, 0x8E, 0x8E, 0x4E, 0x8E, 0x8C, 0x2C, 0x0A, 0xF1, 0x00, 0x00,
  0x02, 0x02, 0x05, 0x1E, 0xB8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x78, 0xB8, 0x9E, 0x05, 0x08, 0x08
};

static char alien [] = {
  0x00, 0x00, 0x84, 0xF6, 0x08, 0x54, 0x44, 0x04, 0x04, 0x24, 0x08, 0xF6, 0x84, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x04, 0x0D, 0x15, 0x4D, 0x55, 0x55, 0x55, 0x4D, 0x15, 0x0D, 0x04, 0x03, 0x00, 0x00
};

static char revAlien [] = {
  0x00, 0x00, 0x00, 0x84, 0xF6, 0x08, 0x24, 0x04, 0x04, 0x44, 0x54, 0x08, 0xF6, 0x84, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x04, 0x0D, 0x15, 0x4D, 0x55, 0x55, 0x55, 0x4D, 0x15, 0x0D, 0x04, 0x03, 0x00
};


struct stats {
  int hunger;
  int health;
  int happiness;
  int hygiene;
};


int count = 3;

int xdirect = 0;
int ydirect = 0;
int jump = 0;
void movement() {

  if (xpos == (64 - 16)) {
    xdirect = 1;
  }
  if (xpos == 0) {
    xdirect = 0;
  }
  if (ypos == 7) {
    ydirect = 1;
  }
  if (ypos == 12) {
    ydirect = 0;
  }
  if ((xpos / 10) % 2 == 0) {
    if (ydirect == 0) {
      ypos--;
    } else if (ydirect == 1) {
      ypos++;
    }
  } else if ((xpos / 10) % 2 == 1) {
    ypos == 15;
  }

  if (xdirect == 0) {
    OrbitOledMoveTo(xpos++, ypos);
  }

  else {
    if (xpos > 0 && xdirect == 1) {
      OrbitOledMoveTo(xpos--, ypos);
    }
  }
}
void printTama(char* tamaFor, char* tamaRev) {
  movement();
  if (xdirect == 1)
    OrbitOledPutBmp(16, 16, tamaFor);
  else if (xdirect == 0)
    OrbitOledPutBmp(16, 16, tamaRev);
}
void tamaDoingThings (char* tama ) {
 OrbitOledMoveTo(56, 8);
  
    OrbitOledPutBmp(16, 16, tama);
}
